import os
import random
import shutil
import pandas as pd

# Paths to your full training dataset and the folder where you want to save the 400 selected images
image_dir = '/Users/6581/Downloads/week6/3238357/images/train/'  # Folder with all training images
label_file = '/Users/6581/Downloads/week6/3238357/Bounding_boxes/train_labels.csv'  # CSV file with training annotations
output_image_dir = '/Users/6581/Downloads/week6/images/'  # New folder for 400 images
output_label_dir = '/Users/6581/Downloads/week6/labels/'  # New folder for YOLO format annotations

# Create output directories if they don't exist
os.makedirs(output_image_dir, exist_ok=True)
os.makedirs(output_label_dir, exist_ok=True)

# Load the CSV containing the annotations
annotations_df = pd.read_csv(label_file)

# Get the list of all images in the training dataset
image_files = [f for f in os.listdir(image_dir) if f.endswith('.jpg')]

# Randomly select 400 images
selected_images = random.sample(image_files, 400)

# Process each selected image and its corresponding annotations
for image_file in selected_images:
    # Copy the image to the new directory
    shutil.copy(os.path.join(image_dir, image_file), output_image_dir)
    
    # Extract corresponding annotations from the CSV
    image_annotations = annotations_df[annotations_df['filename'] == image_file]
    
    # Prepare the YOLO format annotations
    yolo_annotations = []
    
    # Image dimensions (you can hardcode if all images are the same size)
    image_width = 640  # Replace with actual width
    image_height = 480  # Replace with actual height

    for _, row in image_annotations.iterrows():
        class_name = row['class']  # Assuming 'class' column has labels like "Graffiti"
        x_min, y_min, x_max, y_max = row[['xmin', 'ymin', 'xmax', 'ymax']]

        # Map class name to class_id
        if class_name == 'Graffiti':
            class_id = 0  # Example class ID for graffiti
        
        # Convert to YOLO format
        x_center = ((x_min + x_max) / 2) / image_width
        y_center = ((y_min + y_max) / 2) / image_height
        width = (x_max - x_min) / image_width
        height = (y_max - y_min) / image_height
        
        yolo_annotations.append(f"{class_id} {x_center:.6f} {y_center:.6f} {width:.6f} {height:.6f}")
    
    # Save the YOLO format annotation to the output directory
    label_output_path = os.path.join(output_label_dir, image_file.replace('.jpg', '.txt'))
    with open(label_output_path, 'w') as label_file:
        for annotation in yolo_annotations:
            label_file.write(annotation + '\n')

print(f"Selected 400 images and copied images/labels to {output_image_dir} and {output_label_dir}")
